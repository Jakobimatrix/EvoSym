#ifndef WORLD_MESH
#define WORLD_MESH

#include "mesh.hpp"


class WorldMesh : public SimpleMesh {
 public:
  WorldMesh() { init(); }

  void init() {
    // clang-format off
    vertex_buffer =
        {
            // positions
            -0.9f, -0.9f, -0.9f,
            -0.9f,  0.9f, -0.9f,
            -0.9f, -0.9f,  0.9f,
            -0.9f, -0.9f,  0.9f,
            -0.9f,  0.9f, -0.9f,
            -0.9f,  0.9f,  0.9f,

             0.9f, -0.9f, -0.9f,
             0.9f,  0.9f, -0.9f,
             0.9f, -0.9f,  0.9f,
             0.9f, -0.9f,  0.9f,
             0.9f,  0.9f, -0.9f,
             0.9f,  0.9f,  0.9f,

            -0.9f, -0.9f, -0.9f,
             0.9f, -0.9f, -0.9f,
            -0.9f, -0.9f,  0.9f,
            -0.9f, -0.9f,  0.9f,
             0.9f, -0.9f, -0.9f,
             0.9f, -0.9f,  0.9f,

            -0.9f,  0.9f, -0.9f,
             0.9f,  0.9f, -0.9f,
            -0.9f,  0.9f,  0.9f,
            -0.9f,  0.9f,  0.9f,
             0.9f,  0.9f, -0.9f,
             0.9f,  0.9f,  0.9f,

            -0.9f, -0.9f, -0.9f,
             0.9f, -0.9f, -0.9f,
            -0.9f,  0.9f, -0.9f
            -0.9f,  0.9f, -0.9f,
             0.9f, -0.9f, -0.9f,
             0.9f,  0.9f, -0.9f,

            -0.9f, -0.9f,  0.9f,
             0.9f, -0.9f,  0.9f,
            -0.9f,  0.9f,  0.9f,
            -0.9f,  0.9f,  0.9f,
             0.9f, -0.9f,  0.9f,
             0.9f,  0.9f,  0.9f
        };
        normal_buffer =
        {
            // normal coordinates
            -1, 0, 0,
            -1, 0, 0,
            -1, 0, 0,
            -1, 0, 0,
            -1, 0, 0,
            -1, 0, 0,

             1, 0, 0,
             1, 0, 0,
             1, 0, 0,
             1, 0, 0,
             1, 0, 0,
             1, 0, 0,

             0, -1, 0,
             0, -1, 0,
             0, -1, 0,
             0, -1, 0,
             0, -1, 0,
             0, -1, 0,

             0, 1, 0,
             0, 1, 0,
             0, 1, 0,
             0, 1, 0,
             0, 1, 0,
             0, 1, 0,

             0, 0, -1,
             0, 0, -1,
             0, 0, -1,
             0, 0, -1,
             0, 0, -1,
             0, 0, -1,

             0, 0, 1,
             0, 0, 1,
             0, 0, 1,
             0, 0, 1,
             0, 0, 1,
             0, 0, 1
        };
        color_buffer =
        {
            // color rgba
            1, 0, 0, 1,
            1, 0, 0, 1,
            1, 0, 0, 1,
            1, 0, 0, 1,
            1, 0, 0, 1,
            1, 0, 0, 1,

            1, 1, 0, 1,
            1, 1, 0, 1,
            1, 1, 0, 1,
            1, 1, 0, 1,
            1, 1, 0, 1,
            1, 1, 0, 1,

            1, 1, 1, 1,
            1, 1, 1, 1,
            1, 1, 1, 1,
            0, 0, 0, 1,
            0, 0, 0, 1,
            0, 0, 0, 1,

            1, 0, 0, 1,
            1, 1, 0, 1,
            1, 0, 1, 1,
            0, 1, 1, 1,
            1, 1, 1, 1,
            1, 1, 1, 1,

            1, 0, 1, 1,
            1, 0, 1, 1,
            1, 0, 1, 1,
            1, 0, 1, 1,
            1, 0, 1, 1,
            1, 0, 1, 1,

            1, 1, 1, 0,
            1, 1, 1, 0,
            1, 1, 1, 0,
            1, 1, 1, 0,
            1, 1, 1, 0,
            1, 1, 1, 0,
        };
        //clang-format on
        for(int i = 0; i < 6*6; i++){
          index_buffer.push_back(i);
        }


  }
};

#endif
